# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, master-*, staging, trying ]
  pull_request:
    branches: [ master, master-*, staging, trying ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # get user id to avoid permission errors when mapping the github workspace into the docker container.
  # See https://github.com/actions/runner/issues/691
  configure:
    runs-on: ubuntu-latest
    outputs:
      uid_gid: ${{ steps.get-user.outputs.uid_gid }}
    steps:
      - id: get-user
        run: echo "::set-output name=uid_gid::$(id -u):$(id -g)"
        
  build:
    needs: configure
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/mtac2/mtac2-ci:master      
      options: --user ${{ needs.configure.outputs.uid_gid }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: checkout
      uses: actions/checkout@v2
      
    - name: Build Mtac2
      run: |
        docker exec COQ /bin/bash --login -c "
        export PS4='+ \e[33;1m(\$0 @ line \$LINENO) \$\e[0m '
        set -ex
        cd "$GITHUB_WORKSPACE"
        sudo chown -R coq:coq .
        ./configure.sh
        make
        make test
