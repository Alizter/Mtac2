use std::str::FromStr;
use std::string::String;

grammar;

pub Symbol: String = {
    <s:r"[^; ]*"> => String::from(s)
}

SingleSemiColon: () = {
    ";" => (),
};

pub Stacks: Vec<String> = {
    <stacks: (<Symbol> SingleSemiColon)*> <last_stack: Symbol> => {
      let mut stacks = stacks;
      stacks.push(last_stack);
      stacks
    }
};

pub Float: f64 = {
    <pre: Symbol> => pre.parse::<f64>().expect("invalid float"),
}

pub Line: (Vec<String>, f64) = {
    <stacks: Stacks> <f: Float> => (stacks, f)
}